name: PluginsDeployment

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  DeployPlugins:
    name: Deploy Plugins
    runs-on: repository
    steps:
      - name: Stop Pollinator
        working-directory: C:\git\deadline-pipeline\pollinator\command
        shell: cmd
        run: stop.cmd

      # - name: Deploy Plugins
      #   run: |
      #     C:\tools\miniconda3\envs\py27_x64\python.exe deployment\deploy.py -f deployment\deploy_plugins.json
      #   working-directory: C:\git\deadline-pipeline
      #   shell: cmd

      # - name: Start Pollinator
      #   run: python C:\temp\client.py

  # DeployAssets:
  #   name: Deploy Assets
  #   runs-on: self-hosted, fileshare
  #   needs: DeployPlugins
  #   steps:
  #     - name: Deploy Assets
  #       run: |
  #         net use W: \\10.1.1.7\DeadlineFiles /persistent:yes /savecred
  #         C:\tools\miniconda3\envs\py27_x64\python.exe deployment\deploy.py -f deployment\deploy_assets.json
  #       working-directory: C:\git\deadline-pipeline
  #       shell: cmd

  # notifySlack:
  #   name: Notify Slack
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Slack Notification
  #     uses: rtCamp/action-slack-notify@v2
  #     env:
  #       SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
  #       CHANNEL: 404

  slack-workflow-status:
    if: always()
    name: Notify Slack
    # needs:
    #   - job-1
    #   - job-2
    runs-on: ubuntu-latest
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@master
        with:
          # Required Input
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}
          # Optional Input
          channel: '#404'
          name: 'Automator'
          icon_emoji: ':poop:'
          icon_url: 'https://avatars0.githubusercontent.com/u/1701160?s=96&v=4'
