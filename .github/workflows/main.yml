name: PluginsDeployment

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  DeployPlugins:
    name: Deploy Plugins
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2

      - name: Stop Pollinator
        working-directory: C:\git\deadline-pipeline\pollinator\command
        shell: cmd
        run: stop.cmd

      - name: Deploy Plugins
        run: |
          C:\tools\miniconda3\envs\py27_x64\python.exe deployment\deploy.py -f deployment\deploy_plugins.json
        working-directory: C:\git\deadline-pipeline
        shell: cmd

      - name: Change Pollinator Status
        shell: powershell
        run: |
          $ini = Get-IniContent C:\Users\Giraffe0\pollinator\pollinator.ini
          $ini["Pollinator"]["Started"] = "False"
          $ini | Out-IniFile -encoding ascii -FilePath C:\Users\Giraffe0\pollinator\pollinator.ini -Force

  # DeployAssets:
  #   name: Deploy Assets
  #   runs-on: self-hosted
  #   needs: DeployPlugins
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Deploy Assets
  #       run: |
  #         net use W: \\10.1.1.7\DeadlineFiles /persistent:yes /savecred
  #         C:\tools\miniconda3\envs\py27_x64\python.exe deployment\deploy.py -f deployment\deploy_assets.json
  #       working-directory: C:\git\deadline-pipeline
  #       shell: cmd

  # NotifySlack:
  #   name: Notify Slack
  #   runs-on: ubuntu-latest
  #   needs: DeployAssets
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Slack Notification
  #     uses: rtCamp/action-slack-notify@v2
  #     env:
  #       SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
  #       CHANNEL: 404
